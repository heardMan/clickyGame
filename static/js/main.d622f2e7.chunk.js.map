{"version":3,"sources":["components/scoreboard/index.js","components/navbar/index.js","components/character-cards/index.js","components/welcome/index.js","components/game/index.js","components/main-content/index.js","components/footer/index.js","seed/character.js","App.js","serviceWorker.js","index.js"],"names":["Scoreboard","react_default","a","createElement","this","props","score","topScore","Component","Navbar","className","href","scoreboard","state","CharacterCards","_this","characters","map","element","i","key","id","name","onClick","characterSelect","bind","src","concat","process","img","alt","skullsBG","background-color","backgroundImage","Welcome","style","Game","welcome","character_cards","handleCharacterSelect","MainContent","game","shuffle","handleInputChange","handleScoreChange","Footer","all","App","alreadyChosen","arr","length","j","Math","floor","random","_ref","event","value","target","setState","Object","defineProperty","data","exists","indexOf","plusOne","shuffled","push","console","log","scores","newScore","dropdown","onScoreChange","navbar","main_content","footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d622f2e7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './style.css';\n\nclass Scoreboard extends Component {\n    render() {\n        return(\n        <span> Score: {this.props.score} | Top Score: {this.props.topScore} </span>\n        );\n    };\n}\n\nexport default Scoreboard;","import React, { Component } from 'react';\nimport './style.css';\n\nimport Scoreboard from '../scoreboard';\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-blue fixed-top py-3 nav-shadow\">\n                <a className=\"navbar-brand\" href=\"#\"><strong>Clicky Game</strong></a>\n                \n                <ul className=\"navbar-nav text-white ml-auto\">\n                        <li>\n                            <Scoreboard score={this.props.state.score}\n                                        topScore={this.props.state.topScore}/>\n                        </li>\n                    </ul>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport './style.css';\n\nclass CharacterCards extends Component {\n    render() {\n        return (\n            <div className=\"row my-5\">\n                <div className=\"col-11 mx-auto\">\n                    <div className=\"card p-5 main-card rounded-0 border-0\">\n                        <div className=\"row\">\n                            {this.props.characters.map((element, i) => {\n                                return (\n                                    <div key={element.id} name={element.id} className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-3\">\n                                        <div className=\"card charcard rounded-0 border-0 hover p-2\" onClick={this.props.characterSelect.bind(this, element.id)}>\n                                            <div className=\"card-img-top\">\n                                                <img className=\"img-fluid maxH\" src={`${process.env.PUBLIC_URL}/img/${element.img}`} alt=\"\" />\n                                            </div>\n                                            <div className=\"card-title\">\n                                                {element.name}\n                                            </div>\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n\n\n\n\n\n            </div>\n        );\n    }\n}\n\nexport default CharacterCards;","import React, { Component } from 'react';\nimport './style.css';\n\n//import Scoreboard from '../scoreboard';\n\nconst skullsBG = {\n    'background-color': '#2574a9',\n    backgroundImage: `url(${process.env.PUBLIC_URL}/img/skulls.png)`,\n  };\n\nclass Welcome extends Component {\n    render() {\n        return (\n            <div className=\"row my-5 text-white\">\n                <div className=\"col-11 mx-auto\"> \n                    <div className=\"card rounded-0 p-5 shadow1 bg-skulls\" style={skullsBG} >\n                        <div className=\"card-title\">\n                            <h3>Clicky Game</h3>\n                        </div>\n                        <div className=\"card-body\">\n\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <p>Welcome to Clicky Game Cllick an image to start the game!</p>\n                                </div>\n                            </div>\n                            {/* <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <Scoreboard \n                                        score={this.props.score}\n                                        topScore={this.props.topScore}\n                                    />\n                                </div>\n                            </div> */}\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Welcome;","import React, { Component } from 'react';\n\nimport CharacterCards from '../character-cards/index';\nimport Welcome from '../welcome';\n\nclass Game extends Component {\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <Welcome \n                        score={this.props.state.score}\n                        topScore={this.props.state.topScore}\n                    />\n\n                    <CharacterCards\n                        characters={this.props.state.characters}\n                        characterSelect={this.props.handleCharacterSelect}\n                    />\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Game;","import React, {Component} from 'react';\nimport Game from '../game';\n\nclass MainContent extends Component {\n    \n    render(){\n        return(\n            <div className=\"container-fluid mt-5\">\n                <Game \n                state={this.props.state}\n                shuffle={this.props.shuffle}\n                handleInputChange={this.props.handleInputChange}\n                handleCharacterSelect={this.props.handleCharacterSelect}\n                handleScoreChange={this.props.handleScoreChange}/>\n            </div>\n        );\n    }\n}\n\nexport default MainContent;","import React, {Component} from 'react';\n\nclass Footer extends Component {\n    render(){\n        return(\n            <div className=\"position-absolute-bottom\">\n                <div className=\"row\"></div>\n                <div className=\"row\"></div>\n            </div>\n        );\n    }\n}\n\nexport default Footer;","const characters = {\n    all: [\n        {\n            id: 1,\n            name: \"Rick\",\n            img: \"rick.png\"\n           \n        },\n        {\n            id: 2,\n            name: \"Morty\",\n            img: \"morty.jpg\"\n        },\n        {\n            id: 3,\n            name: \"Evil Morty\",\n            img: \"evilMorty.png\"\n        },\n        {\n            id: 4,\n            name: \"Bird Person\",\n            img: \"Birdperson.png\"\n        },\n        {\n            id: 5,\n            name: \"Beth\",\n            img: \"Beth_Smith.png\"\n        },\n        {\n            id: 6,\n            name: \"Summer\",\n            img: \"Summer.jpg\"\n        },\n        {\n            id: 7,\n            name: \"Mr. Poopybutthole\",\n            img: \"Mr_poopy_butthole.png\"\n        },\n        {\n            id: 8,\n            name: \"Ants in my eyes Johnson\",\n            img: \"Ants_in_my_eyes_johnson.png\"\n        },\n        {\n            id: 9,\n            name: \"Squanchy\",\n            img: \"Squanchy_.png\"\n            \n        },\n        {\n            id: 10,\n            name: \"Reverse Giraffe\",\n            img: \"Reverse_Giraffe_Entire_Body.png\"\n        },\n        {\n            id: 11,\n            name: \"prince Nebulon\",\n            img: \"PrinceNebulon.png\"\n        },\n        {\n            id: 12,\n            name: \"Taddy Mason\",\n            img: \"TaddyHQ.png\"\n        }\n    ]\n}\n\nexport default characters;","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/navbar';\nimport MainContent from './components/main-content';\nimport Footer from './components/footer';\nimport characters from '../src/seed/character';\n//import { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass App extends Component {\n\n  state = {\n    characters: characters.all,\n    alreadyChosen: [],\n    score: 0,\n    topScore: 0,\n}\n\nshuffle = arr => {\n    for (let i = 0; i < arr.length; i++) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n}\n\nhandleInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    this.setState({\n        [name]: value\n    })\n};\n\nhandleCharacterSelect = (data) => {\n\n    const exists = this.state.alreadyChosen.indexOf(data);\n    const score = this.state.score;\n    const topScore = this.state.topScore;\n    const plusOne = score + 1;\n    if (exists > -1) {\n\n        if (score > topScore) {\n            const shuffled = this.shuffle(this.state.characters);\n            this.setState(\n                {\n                    characters: shuffled,\n                    alreadyChosen: [],\n                    score: 0,\n                    topScore: score,\n                }\n            );\n        } else {\n            const shuffled = this.shuffle(this.state.characters);\n            this.setState(\n                {\n                    characters: shuffled,\n                    alreadyChosen: [],\n                    score: 0,\n                }\n            );\n        }\n\n\n    } else {\n        this.state.alreadyChosen.push(data);\n        const shuffled = this.shuffle(this.state.characters);\n        this.setState({ \n            score: plusOne,\n            characters: shuffled\n        });\n        \n    }\n\n    console.log(this.state);\n\n\n}\n\nhandleScoreChange = () => {\n    const scores = {\n        newScore: this.dropdown.value,\n        topScore: this.dropdown.value\n    }\n\n    this.props.onScoreChange(scores);\n    \n}\n  \n  render() {\n    return (\n     \n        <div className=\"App\">\n          <Navbar state={this.state}/>\n          <MainContent \n          state={this.state}\n          shuffle={this.shuffle}\n          handleInputChange={this.handleInputChange}\n          handleCharacterSelect={this.handleCharacterSelect}\n          handleScoreChange={this.handleScoreChange}/>\n          <Footer />     \n        </div>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}