{"version":3,"sources":["components/navbar/index.js","seed/character.js","components/character-cards/index.js","components/scoreboard/index.js","components/welcome/index.js","components/game/index.js","components/main-content/index.js","components/footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","Component","characters","all","id","name","img","CharacterCards","_this","this","props","map","element","i","key","onClick","characterSelect","bind","src","alt","Scoreboard","score","topScore","Welcome","scoreboard","Game","state","alreadyChosen","shuffle","arr","length","j","Math","floor","random","_ref","handleInputChange","event","value","target","setState","Object","defineProperty","handleCharacterSelect","data","exists","indexOf","plusOne","shuffled","push","console","log","handleScoreChange","scores","newScore","dropdown","onScoreChange","welcome","character_cards","MainContent","game","Footer","App","navbar","main_content","footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7ad5aad3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './style.css';\n\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-blue fixed-top py-3 nav-shadow\">\n                <a className=\"navbar-brand\" href=\"#\"><strong>Clicky Game</strong></a>\n                \n                <ul className=\"navbar-nav\">\n                        \n                    </ul>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","const characters = {\n    all: [\n        {\n            id: 1,\n            name: \"Rick\",\n            img: \"/img/rick.png\"\n           \n        },\n        {\n            id: 2,\n            name: \"Morty\",\n            img: \"/img/morty.jpg\"\n        },\n        {\n            id: 3,\n            name: \"Evil Morty\",\n            img: \"/img/evilMorty.png\"\n        },\n        {\n            id: 4,\n            name: \"Bird Person\",\n            img: \"/img/Birdperson.png\"\n        },\n        {\n            id: 5,\n            name: \"Beth\",\n            img: \"/img/Beth_Smith.png\"\n        },\n        {\n            id: 6,\n            name: \"Summer\",\n            img: \"/img/Summer.jpg\"\n        },\n        {\n            id: 7,\n            name: \"Mr. Poopybutthole\",\n            img: \"/img/Mr_poopy_butthole.png\"\n        },\n        {\n            id: 8,\n            name: \"Ants in my eyes Johnson\",\n            img: \"/img/Ants_in_my_eyes_johnson.png\"\n        },\n        {\n            id: 9,\n            name: \"Squanchy\",\n            img: \"/img/Squanchy_.png\"\n            \n        },\n        {\n            id: 10,\n            name: \"Reverse Giraffe\",\n            img: \"/img/Reverse_Giraffe_Entire_Body.png\"\n        },\n        {\n            id: 11,\n            name: \"prince Nebulon\",\n            img: \"/img/PrinceNebulon.png\"\n        },\n        {\n            id: 12,\n            name: \"Taddy Mason\",\n            img: \"/img/TaddyHQ.png\"\n        }\n    ]\n}\n\nexport default characters;","import React, { Component } from 'react';\nimport './style.css';\n\nclass CharacterCards extends Component {\n    render() {\n        return (\n            <div className=\"row my-5\">\n                <div className=\"col-11 mx-auto\">\n                    <div className=\"card p-5 main-card rounded-0 border-0\">\n                        <div className=\"row\">\n                            {this.props.characters.map((element, i) => {\n                                return (\n                                    <div key={element.id} name={element.id} className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-3\">\n                                        <div className=\"card charcard rounded-0 border-0 hover p-2\" onClick={this.props.characterSelect.bind(this, element.id)}>\n                                            <div className=\"card-img-top\">\n                                                <img className=\"img-fluid maxH\" src={element.img} alt=\"\" />\n                                            </div>\n                                            <div className=\"card-title\">\n                                                {element.name}\n                                            </div>\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n\n\n\n\n            </div>\n        );\n    }\n}\n\nexport default CharacterCards;","import React, { Component } from 'react';\nimport './style.css';\n\nclass Scoreboard extends Component {\n    render() {\n        return(\n        <span> Score: {this.props.score} | Top Score: {this.props.topScore} </span>\n        );\n    };\n}\n\nexport default Scoreboard;","import React, { Component } from 'react';\nimport './style.css';\n\nimport Scoreboard from '../scoreboard';\n\nclass Welcome extends Component {\n    render() {\n        return (\n            <div className=\"row my-5 text-white\">\n                <div className=\"col-11 mx-auto\">\n                    <div className=\"card rounded-0 p-5 shadow1 bg-skulls\" >\n                        <div className=\"card-title\">\n                            <h3>Clicky Game</h3>\n                        </div>\n                        <div className=\"card-body\">\n\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <p>Welcome to Clicky Game Cllick an image to start the game!</p>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-12\">\n                                    <Scoreboard \n                                        score={this.props.score}\n                                        topScore={this.props.topScore}\n                                    />\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Welcome;","import React, { Component } from 'react';\n\nimport characters from '../../seed/character';\nimport CharacterCards from '../character-cards/index';\nimport Welcome from '../welcome';\n\n\n\n// const shuffle = arr => {\n//     for (let i = 0; i < arr.length; i++) {\n//         const j = Math.floor(Math.random() * (i + 1));\n//         [arr[i], arr[j]] = [arr[j], arr[i]];\n//     }\n//     return arr;\n// }\n\n//shuffle(characters.all);\n\nclass Game extends Component {\n    state = {\n        characters: characters.all,\n        alreadyChosen: [],\n        score: 0,\n        topScore: 0,\n    }\n\n    shuffle = arr => {\n        for (let i = 0; i < arr.length; i++) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [arr[i], arr[j]] = [arr[j], arr[i]];\n        }\n        return arr;\n    }\n\n    handleInputChange = event => {\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({\n            [name]: value\n        })\n    };\n\n    handleCharacterSelect = (data) => {\n\n        const exists = this.state.alreadyChosen.indexOf(data);\n        const score = this.state.score;\n        const topScore = this.state.topScore;\n        const plusOne = score + 1;\n        if (exists > -1) {\n\n            if (score > topScore) {\n                const shuffled = this.shuffle(this.state.characters);\n                this.setState(\n                    {\n                        characters: shuffled,\n                        alreadyChosen: [],\n                        score: 0,\n                        topScore: score,\n                    }\n                );\n            } else {\n                const shuffled = this.shuffle(this.state.characters);\n                this.setState(\n                    {\n                        characters: shuffled,\n                        alreadyChosen: [],\n                        score: 0,\n                    }\n                );\n            }\n\n\n        } else {\n            this.state.alreadyChosen.push(data);\n            const shuffled = this.shuffle(this.state.characters);\n            this.setState({ \n                score: plusOne,\n                characters: shuffled\n            });\n            \n        }\n\n        console.log(this.state);\n\n\n    }\n\n    handleScoreChange = () => {\n        const scores = {\n            newScore: this.dropdown.value,\n            topScore: this.dropdown.value\n        }\n\n        this.props.onScoreChange(scores);\n        \n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <Welcome \n                        score={this.state.score}\n                        topScore={this.state.topScore}\n                    />\n\n                    <CharacterCards\n                        characters={this.state.characters}\n                        characterSelect={this.handleCharacterSelect}\n                    />\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Game;","import React, {Component} from 'react';\nimport Game from '../game';\n\nclass MainContent extends Component {\n    \n    render(){\n        return(\n            <div className=\"container-fluid mt-5\">\n                <Game />\n            </div>\n        );\n    }\n}\n\nexport default MainContent;","import React, {Component} from 'react';\n\nclass Footer extends Component {\n    render(){\n        return(\n            <div className=\"position-absolute-bottom\">\n                <div className=\"row\"></div>\n                <div className=\"row\"></div>\n            </div>\n        );\n    }\n}\n\nexport default Footer;","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/navbar';\nimport MainContent from './components/main-content';\nimport Footer from './components/footer';\n//import { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  \n  render() {\n    return (\n     \n        <div className=\"App\">\n          <Navbar />\n          <MainContent />\n          <Footer />     \n        </div>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}