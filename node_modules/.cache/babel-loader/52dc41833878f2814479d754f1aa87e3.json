{"ast":null,"code":"import _defineProperty from \"/Users/mark/Desktop/clickyGame/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/mark/Desktop/clickyGame/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mark/Desktop/clickyGame/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mark/Desktop/clickyGame/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mark/Desktop/clickyGame/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mark/Desktop/clickyGame/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mark/Desktop/clickyGame/src/components/game/index.js\";\nimport React, { Component } from 'react';\nimport characters from '../../seed/character';\nimport CharacterCards from '../character-cards/index';\nimport Welcome from '../welcome'; // const shuffle = arr => {\n//     for (let i = 0; i < arr.length; i++) {\n//         const j = Math.floor(Math.random() * (i + 1));\n//         [arr[i], arr[j]] = [arr[j], arr[i]];\n//     }\n//     return arr;\n// }\n//shuffle(characters.all);\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Game)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      characters: characters.all,\n      alreadyChosen: [],\n      score: 0,\n      topScore: 0\n    };\n\n    _this.shuffle = function (arr) {\n      for (var i = 0; i < arr.length; i++) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var _ref = [arr[j], arr[i]];\n        arr[i] = _ref[0];\n        arr[j] = _ref[1];\n      }\n\n      return arr;\n    };\n\n    _this.handleInputChange = function (event) {\n      var value = event.target.value;\n      var name = event.target.name;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleCharacterSelect = function (data) {\n      var exists = _this.state.alreadyChosen.indexOf(data);\n\n      var score = _this.state.score;\n      var topScore = _this.state.topScore;\n      var plusOne = score + 1;\n\n      if (exists > -1) {\n        if (score > topScore) {\n          var shuffled = _this.shuffle(_this.state.characters);\n\n          _this.setState({\n            characters: shuffled,\n            alreadyChosen: [],\n            score: 0,\n            topScore: score\n          });\n        } else {\n          var _shuffled = _this.shuffle(_this.state.characters);\n\n          _this.setState({\n            characters: _shuffled,\n            alreadyChosen: [],\n            score: 0\n          });\n        }\n      } else {\n        _this.state.alreadyChosen.push(data);\n\n        var _shuffled2 = _this.shuffle(_this.state.characters);\n\n        _this.setState({\n          score: plusOne,\n          characters: _shuffled2\n        });\n      }\n\n      console.log(_this.state);\n    };\n\n    _this.handleScoreChange = function () {\n      var scores = {\n        newScore: _this.dropdown.value,\n        topScore: _this.dropdown.value\n      };\n\n      _this.props.onScoreChange(scores);\n    };\n\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Welcome, {\n        score: this.state.score,\n        topScore: this.state.topScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(CharacterCards, {\n        characters: this.state.characters,\n        characterSelect: this.handleCharacterSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/mark/Desktop/clickyGame/src/components/game/index.js"],"names":["React","Component","characters","CharacterCards","Welcome","Game","state","all","alreadyChosen","score","topScore","shuffle","arr","i","length","j","Math","floor","random","handleInputChange","event","value","target","name","setState","handleCharacterSelect","data","exists","indexOf","plusOne","shuffled","push","console","log","handleScoreChange","scores","newScore","dropdown","props","onScoreChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport characters from '../../seed/character';\nimport CharacterCards from '../character-cards/index';\nimport Welcome from '../welcome';\n\n\n\n// const shuffle = arr => {\n//     for (let i = 0; i < arr.length; i++) {\n//         const j = Math.floor(Math.random() * (i + 1));\n//         [arr[i], arr[j]] = [arr[j], arr[i]];\n//     }\n//     return arr;\n// }\n\n//shuffle(characters.all);\n\nclass Game extends Component {\n    state = {\n        characters: characters.all,\n        alreadyChosen: [],\n        score: 0,\n        topScore: 0,\n    }\n\n    shuffle = arr => {\n        for (let i = 0; i < arr.length; i++) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [arr[i], arr[j]] = [arr[j], arr[i]];\n        }\n        return arr;\n    }\n\n    handleInputChange = event => {\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({\n            [name]: value\n        })\n    };\n\n    handleCharacterSelect = (data) => {\n\n        const exists = this.state.alreadyChosen.indexOf(data);\n        const score = this.state.score;\n        const topScore = this.state.topScore;\n        const plusOne = score + 1;\n        if (exists > -1) {\n\n            if (score > topScore) {\n                const shuffled = this.shuffle(this.state.characters);\n                this.setState(\n                    {\n                        characters: shuffled,\n                        alreadyChosen: [],\n                        score: 0,\n                        topScore: score,\n                    }\n                );\n            } else {\n                const shuffled = this.shuffle(this.state.characters);\n                this.setState(\n                    {\n                        characters: shuffled,\n                        alreadyChosen: [],\n                        score: 0,\n                    }\n                );\n            }\n\n\n        } else {\n            this.state.alreadyChosen.push(data);\n            const shuffled = this.shuffle(this.state.characters);\n            this.setState({ \n                score: plusOne,\n                characters: shuffled\n            });\n            \n        }\n\n        console.log(this.state);\n\n\n    }\n\n    handleScoreChange = () => {\n        const scores = {\n            newScore: this.dropdown.value,\n            topScore: this.dropdown.value\n        }\n\n        this.props.onScoreChange(scores);\n        \n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <Welcome \n                        score={this.state.score}\n                        topScore={this.state.topScore}\n                    />\n\n                    <CharacterCards\n                        characters={this.state.characters}\n                        characterSelect={this.handleCharacterSelect}\n                    />\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}